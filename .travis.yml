# vim ft=yaml
# travis-ci.org definition for MOxUnit build (based on CoSMoMVPA,
# which is based on PyMVPA, which is based on nipype configuration, 
# which in turn was based on nipy)
#
# We pretend to be java because we need GNU Octave which is not
# available (as of April 2015)

language: java

cache:
  
  apt: true # Not working for public repos :( 
  directories:
    # Following directories will be generated 
    - $HOME/octave
    #- $HOME/build/neuropoly/qMRLab/osfData
env:
 global:
    - OCTAVE=octave
before_install:
    # to prevent IPv6 being used for APT
    - sudo bash -c "echo 'Acquire::ForceIPv4 \"true\";' > /etc/apt/apt.conf.d/99force-ipv4"
    - travis_retry sudo apt-get -y -qq update
    - travis_retry sudo apt-get install -y -qq software-properties-common python-software-properties
    - travis_retry sudo apt-add-repository -y ppa:octave/stable
    - travis_retry sudo apt-get -y -qq update
    - travis_retry sudo apt-get install -y wget
    # get Octave 4,0
    - travis_retry sudo apt-get -y -qq install octave liboctave-dev octave-pkg-dev
    # Please comment in following section if you need to update packages or add a new one
    # If following section is going to be commented in, please set cacheState to false in startup.m
    # --------------
    #- travis_retry wget -O /home/travis/octave/OctavePackages.zip https://osf.io/t465n/download
    #- unzip /home/travis/octave/OctavePackages.zip
    - travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/struct-1.0.14.tar.gz -P /home/travis/octave
    - travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/optim-1.5.2.tar.gz -P /home/travis/octave
    - travis_retry wget https://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/io-2.4.10.tar.gz -P /home/travis/octave
    - travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/statistics-1.3.0.tar.gz -P /home/travis/octave
    - travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/image-2.6.1.tar.gz -P /home/travis/octave
    # --------------
    - make -C External/MOcov install

jobs:
  include:
    - stage: Test 
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible/quickMoxTests');res=moxunit_runtests('-recursive','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_quickMoxTests.json');exit(~res);" 

    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('BatchExample_test.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_BatchExample_test.json');exit(~res);" 
    # Pay attention to the indentation! Make them look like -stage and script lines above.
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_charmed.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_charmed.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_dti.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_dti.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_noddi.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_noddi.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_qmt_bssfp.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_qmt_bssfp.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_qmt_sirfse.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_qmt_sirfse.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_qmt_spgr.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_qmt_spgr.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_inversion_recovery.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_inversion_recovery.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_vfa_t1.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_vfa_t1.json');exit(~res);" 
    - stage: Test
      script: travis_wait 30 octave --no-gui --eval "bootstrapTest;cd('/home/travis/build/neuropoly/qMRLab/Test/MoxUnitCompatible');res=moxunit_runtests('SimTest_mwf.m','-with_coverage','-cover','/home/travis/build/neuropoly/qMRLab/src','-cover_json_file','/home/travis/build/neuropoly/qMRLab/reports/coverage_SimTest_mwf.json');exit(~res);" 

after_success:
    script: travis_wait 30 octave --no-gui --eval "bootstrapTest;mocov_combine('/home/travis/build/neuropoly/qMRLab/reports/', 'coverage_combined.json')" 
    - curl --verbose -F json_file=@/home/travis/build/neuropoly/qMRLab/reports/coverage_combined.json https://coveralls.io/api/v1/jobs