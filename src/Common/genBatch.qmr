% This m-file has been automatically generated using qMRgenBatch(*-modelName-*)
% Command Line Interface (CLI) is well-suited for automatization 
% purposes and Octave. 
%
% Please execute this m-file section by section to get familiar with batch
% processing for *-modelName-* on CLI.
%
% Demo files are downloaded into *-modelName-*_data folder. 
%
%
% If you use qMRLab in your work, please cite:
%     Karakuzu A., Boudreau M., Duval T.,Boshkovski T., Leppert I.R., Cabana J.F., 
%     Gagnon I., Beliveau P., Pike G.B., Cohen-Adad J., Stikov N. (2020), qMRLab: 
%     Quantitative MRI analysis, under one umbrella doi: 10.21105/joss.02343
% =========================================================================

%% I- DESCRIPTION

qMRinfo('*-modelName-*'); % Describe the model

%% II- MODEL PARAMETERS
%%       a- create object    

Model = *-modelName-*; 

%%       b- modify options
%           |- This section will pop-up the options GUI. Close window to continue.
%           |- Octave is not GUI compatible. Modify Model.options directly.

Model = Custom_OptionsGUI(Model); % You need to close GUI to move on. 

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Usage tip on automation friendly option/protocol settings:
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%    If you would like to load a desired set of options/protocols programatically,
%    you can save the current configuration from the Custom_OptionsGUI panel using
%    the `save` button.
%    This will save a mat file named (model_name.qmrlab.mat), which can be later loaded
%    into the respective model object by:
%       --------------------------------------------------
%       Model = model_name;
%       Model = Model.loadObj('../model_name.qmrlab.mat');
%       --------------------------------------------------
$    Note:
%      `Model.loadObj('model_name.qmrlab.mat')` call won't update the fields in
%      the `Model` object, unless the output is re-assigned to the object itself by
%      `Model = Model.loadObj('model_name.qmrlab.mat')`. This compromise on convenience
%      is to retain Octave compatibility.
%
%    If you don't have MATLAB, hence cannot access the GUI there are 2 options:
%    Option 1:
%        Use `qmrlab/mrgui:latest` Docker image to access GUI. The instructions are available at:
%        https://hub.docker.com/r/qmrlab/mcrgui
%    Option 2: 
%        To set options without GUI:
%          i)  List available option fields using tab completion
%       --------------------------------------------------
%          Model.option. <<then hit tab on your keyboard>>
%       --------------------------------------------------
%          ii) Assign the desired field. For example, in a mono_t2 object:
%       --------------------------------------------------
%          Model.options.DropFirstEcho = true;
%          Model.options.OffsetTerm = false;
%       --------------------------------------------------
%     Note:
%         Some options fields may be mutually exclusive. Such cases are handled by
%         the GUI options panel; however, the relationships may be elusive in CLI
%         especially for complex methods such as qmt_spgr. If options (i) or (ii)
%         are not working for you, please feel free to open an issue in qMRLab and
%         request the protocol file you need: https://github.com/qmrlab/qmrlab.

%% III- FIT EXPERIMENTAL DATASET
%%       a- load experimental data 
*-dataExplain-*

data = struct();
*-dataCommand-*

%%      b- fit dataset 
%             |- This section will fit the data. 

FitResults = FitData(data,Model,0);

% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% Usage tip on accelerating the fitting (MATLAB only):
% ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%    To accelerate fitting for voxelwise models (if Model.voxelwise is 1),
%    you can parallelize this operation if you are using Matlab and the
%    parallel processing toolbox is available by:
%       ---------------------------------------
%       parpool();
%       FitResults = ParFitData(data,Model);
%       ---------------------------------------
%    Note: 
%     This feature has not been implemented for Octave yet.

%%       c- show fitting results 
%           |- Output map will be displayed.
%           |- If available, a graph will be displayed to show fitting in a voxel.

qMRshowOutput(FitResults,data,Model);

%%       d- Save results
%           |-  qMR maps are saved in NIFTI and in a structure FitResults.mat
%                that can be loaded in qMRLab graphical user interface
%           |-  Model object stores all the options and protocol.
%                It can be easily shared with collaborators to fit their 
%                own data or can be used for simulation.

*-saveCommand-*
Model.saveObj('*-modelName-*_Demo.qmrlab.mat');

%% V- SIMULATIONS
%     |- This section can be executed to run simulations for *-modelName-*.
%%       a- Single Voxel Curve
%           |- Simulates Single Voxel curves:
%                (1) use equation to generate synthetic MRI data
%                (2) add rician noise
%                (3) fit and plot curve

% *-SingleVoxelCurve-*

%%       b- Sensitivity Analysis 
%           |-    Simulates sensitivity to fitted parameters:
%                  (1) vary fitting parameters from lower (lb) to upper (ub) bound.
%                  (2) run Sim_Single_Voxel_Curve Nofruns times
%                  (3) Compute mean and std across runs

% *-SensitivityAnalysis-*

